---
import Hero from '../components/Hero.astro';
import PhotoGallery from '../components/PhotoGallery.astro';
import DailyMoments from '../components/DailyMoments.astro';
import VoiceNote from '../components/VoiceNote.astro';
import StoryTimeline from '../components/StoryTimeline.astro';
import LoveCounter from '../components/LoveCounter.astro';

const title = "Happy Birthday Nupur ðŸ’•";
const description = "A special birthday surprise celebrating 1206 beautiful days together";
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content={description}>
  <meta property="og:title" content={title}>
  <meta property="og:description" content={description}>
  <meta property="og:type" content="website">
  <meta name="twitter:card" content="summary_large_image">
  
  <title>{title}</title>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <link rel="manifest" href="/manifest.json">
  <meta name="theme-color" content="#be123c">
  
  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Dancing+Script:wght@700&display=swap" rel="stylesheet">
  
  <style is:global>
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    @keyframes heartbeat {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.1); }
    }
    
    .fade-in-up {
      animation: fadeInUp 0.8s ease-out forwards;
    }
    
    .stagger-1 { animation-delay: 0.1s; }
    .stagger-2 { animation-delay: 0.2s; }
    .stagger-3 { animation-delay: 0.3s; }
    .stagger-4 { animation-delay: 0.4s; }
  </style>
</head>

<body class="bg-gradient-to-br from-rose-50 via-pink-50 to-rose-100 min-h-screen">
  <main class="max-w-lg mx-auto px-4 py-8">
    <Hero />
    <DailyMoments />
    <LoveCounter />
    <PhotoGallery />
    <VoiceNote />
  </main>

  <StoryTimeline />

  <script>
    // Confetti effect on CTA tap
    function createConfetti() {
      const colors = ['#fb7185', '#f43f5e', '#fda4af', '#fecdd3'];
      for (let i = 0; i < 30; i++) {
        const confetti = document.createElement('div');
        confetti.style.position = 'fixed';
        confetti.style.width = '8px';
        confetti.style.height = '8px';
        confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
        confetti.style.left = '50%';
        confetti.style.top = '50%';
        confetti.style.borderRadius = '50%';
        confetti.style.pointerEvents = 'none';
        confetti.style.zIndex = '9999';
        confetti.style.opacity = '1';
        
        document.body.appendChild(confetti);
        
        const angle = (Math.PI * 2 * i) / 30;
        const velocity = 100 + Math.random() * 100;
        const tx = Math.cos(angle) * velocity;
        const ty = Math.sin(angle) * velocity;
        
        confetti.animate([
          { transform: 'translate(0, 0) scale(1)', opacity: 1 },
          { transform: `translate(${tx}px, ${ty}px) scale(0)`, opacity: 0 }
        ], {
          duration: 1000 + Math.random() * 500,
          easing: 'cubic-bezier(0, .9, .57, 1)'
        }).onfinish = () => confetti.remove();
      }
    }
    
    // Add confetti to CTA button
    const ctaButton = document.getElementById('hero-cta');
    if (ctaButton) {
      ctaButton.addEventListener('click', (e) => {
        createConfetti();
      });
    }

    // Intersection Observer for lazy animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('fade-in-up');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    document.querySelectorAll('.animate-on-scroll').forEach(el => observer.observe(el));

    // PWA install prompt
    let deferredPrompt;
    window.addEventListener('beforeinstallprompt', (e) => {
      e.preventDefault();
      deferredPrompt = e;
    });
  </script>
</body>
</html>
